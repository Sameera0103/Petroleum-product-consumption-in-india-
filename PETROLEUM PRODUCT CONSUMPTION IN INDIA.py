# -*- coding: utf-8 -*-
"""SAMEERA BANU M-PYTHON PROJECT

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fxvkWgn95yeWm5FqCZDfkFP7sOrH65PE

IMPORTING THE PACKAGES
"""

import numpy as np
import pandas as pd
import seaborn as sns
import plotly.express as px
import matplotlib.pyplot as plt

"""IMPORTING THE DATASET-PETROLEUM PRODUCTS CONSUMPTION IN INDIA"""

path=pd.read_csv('/content/petroleum_prod_consumption.csv')

type(path)

path.head()

path.tail()

"""VIEWING THE DESIRED ROWS"""

pd.set_option('display.max_column',7)

"""DATA PREPROCESSING"""

df=pd.DataFrame(path)

"""REMOVING THE ROWS WITH MISSING VALUE"""

df.dropna(inplace=True)

"""VISUALIZATION

USING SEABORN
"""

sns.countplot(x='month', data=path)
plt.show()

"""USING HISTOGRAM"""

path['year'].plot.hist()

"""USUNG SCATTERPLOT"""

data = pd.read_csv("/content/petroleum_prod")
plt.scatter(data['year'], data['month'])
plt.title("Scatter Plot")
plt.xlabel('year')
plt.ylabel('month')
plt.show()

"""USING MATPLOTLIB"""

file_path =('/content/petroleum_prod')
data = pd.read_csv(file_path)
plt.figure(figsize=(3,5))
plt.plot(data['year'], data['month'])
plt.xlabel('Year')
plt.ylabel('Month')
plt.title('Petroleum Production Over Time')
plt.show()

"""COUNTING THE UNIQUE VALUES"""

path.month.value_counts()

"""NORMALIZATION"""

path.quantity_in_1000_metric_tonnes.value_counts(normalize=True)

path.year.value_counts(normalize=True)*10

"""CREATING NEW COLUMNS IN REAL TIME DATA SET"""

a=path['month']=path['quantity_in_1000_metric_tonnes']-path['year']
a

path.head(5)

#OUTPUT:MONTH COLUMN IS UPDATED WITH NEW DATAS

"""SLICING THE DATAS FROM DATASET"""

path[['month','year','products']][1:5]

"""SORTING THE DATA-HEAP SORT"""

path[['month','quantity_in_1000_metric_tonnes','year']].sort_values('month',ascending=True,kind='heapsort',na_position='first')[1:10]

"""SORTING THE DATA - MERGE SORT"""

path[['month','quantity_in_1000_metric_tonnes','year']].sort_values('month',ascending=True,kind='mergesort')[1:8]

"""GROUPING THE DATAPOINTS-"GROUPBY"
"""

path.groupby('year')['quantity_in_1000_metric_tonnes']

"""SUM OF ROWS AND COLUMNS-"GROUPBY SUM()"
"""

path.groupby('year')['quantity_in_1000_metric_tonnes'].sum()

"""DATA MANIPULATION"""

(path['quantity_in_1000_metric_tonnes']<2).head(5)

#OUTPUT : RETURNS TRUE OR FALSE FOR THE ATTRIBUTE GIVEN